package ru.job4j.serialization.xml;

/**
 * 3. Формат XML
 * XML eXtensible Markup Language  — расширяемый язык разметки. Данный язык очень похож на HTML, только в отличии от него является расширяемым,
 * что значит, мы можем писать свои теги, а не использовать зарезервированные.
 * В XML нет определенного синтаксиса для описания коллекции элементов, как в JSON.
 * Поэтому пишут так, добавляя окончание s или es, что говорит о том что это коллекция.
 * Применение:
 * - также как и JSON может быть использован для передачи данных между ресурсами в интернете.
 * - используется для декларативной настройки программ, т.е. формально через него мы можем настроить программу. Яркий пример pom.xml
 * - может служить основой для построения целых систем. Например, https://ru.wikipedia.org/wiki/Sedna
 * - в силу своей структуры может быть использован для формализации каких-то правил. Яркий пример checkstyle.xml
 * Структура XML:
 * 1. Объявление XML
 * Это первая строка, которая должна идти в файле, под расширением XML. В ней указывается кодировка и версия XML
 * 2. Теги
 * Теги - это основные детали из которых строится документ. Тег имеет имя и располагается между <>.
 * Между открывающим и закрывающим тегом уже располагаются либо другие теги либо текст той сущности, что мы описываем через тег.
 * 3. Атрибуты
 * - это часть синтаксиса, которая позволяет определить свойста элементов.
 * Атрибуты пишутся в открывающем теге, после его имени в формате: имяАтрибут="его значение"
 * 4. Комментарии
 * Комментарии как однострочные, так и многострочные пишутся внутри <!-- и -->
 */

public class Main {
    public static void main(String[] args) {
        final Book book = new Book("Ono", 846, new Author("King", "21.09.1947"),
                new String[] {"Prosvescenie", "AST"}, true);
    }
}
